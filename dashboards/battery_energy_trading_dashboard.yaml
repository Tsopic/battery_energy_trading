# Battery Energy Trading Dashboard
# Copy this entire file and paste it when creating a new dashboard in Home Assistant
#
# SETUP REQUIRED:
# You must replace 'sensor.nordpool_kwh_ee_eur_3_10_022' with your actual Nord Pool entity ID
# in 3 locations (marked with # REPLACE WITH YOUR NORD POOL ENTITY comments):
# 1. Line ~59: Nord Pool price chart - Tomorrow series
# 2. Line ~67: Nord Pool price chart - Today series
# 3. Line ~152: Current Status - Current Price entity
#
# Find your Nord Pool entity ID in the Integration Configuration card at the top of this dashboard.
#
# Requirements:
# - Battery Energy Trading integration installed and configured
# - (Optional) ApexCharts card from HACS for price chart visualization
#
# Note: If ApexCharts is not installed, the price chart won't display but all other cards will work fine.
#
# Version: 0.10.1+ (includes entity ID fixes, timeslot overlays, and manual Nord Pool configuration)

title: Battery Energy Trading
path: battery-energy-trading
icon: mdi:battery-charging
cards:
  # Configuration Info Card (shows your configured entities)
  - type: entities
    title: "‚öôÔ∏è Integration Configuration"
    state_color: false
    show_header_toggle: false
    entities:
      - entity: sensor.battery_energy_trading_configuration
        name: "Status"
        icon: mdi:check-circle
      - type: attribute
        entity: sensor.battery_energy_trading_configuration
        attribute: nordpool_entity
        name: "Nord Pool Entity"
        icon: mdi:chart-line
      - type: attribute
        entity: sensor.battery_energy_trading_configuration
        attribute: battery_level_entity
        name: "Battery Level Entity"
        icon: mdi:battery
      - type: attribute
        entity: sensor.battery_energy_trading_configuration
        attribute: battery_capacity_entity
        name: "Battery Capacity Entity"
        icon: mdi:battery-high

  # Nord Pool Price Chart - Today vs Tomorrow with Discharge/Charge Overlays
  # NOTE: Replace 'sensor.nordpool_kwh_ee_eur_3_10_022' with your actual Nord Pool entity ID
  # You can find it in the Integration Configuration card above
  - type: custom:apexcharts-card
    experimental:
      color_threshold: true
    graph_span: 24h
    header:
      title: "‚ö° Nord Pool - Today vs Tomorrow with Trading Schedule"
      show: true
    span:
      start: day
      offset: +1d
    series:
      - entity: sensor.nordpool_kwh_ee_eur_3_10_022  # REPLACE WITH YOUR NORD POOL ENTITY
        name: Tomorrow
        type: column
        color: '#03a9f4'
        data_generator: |
          return entity.attributes.raw_tomorrow.map((start, index) => {
            return [new Date(start["start"]).getTime(), entity.attributes.raw_tomorrow[index]["value"] * 1000];
          });
      - entity: sensor.nordpool_kwh_ee_eur_3_10_022  # REPLACE WITH YOUR NORD POOL ENTITY
        name: Today
        offset: '-1d'
        type: column
        color: '#ff9800'
        data_generator: |
          return entity.attributes.raw_today.map((start, index) => {
            return [new Date(start["start"]).getTime(), entity.attributes.raw_today[index]["value"] * 1000];
          });
      # Discharge slots overlay (red highlights)
      - entity: sensor.battery_energy_trading_discharge_time_slots
        name: Discharge Slots
        type: area
        color: 'rgba(255, 82, 82, 0.3)'
        stroke_width: 0
        offset: '-1d'
        data_generator: |
          const slots = entity.attributes.slots || [];
          const config = hass.states['sensor.battery_energy_trading_configuration'];
          if (!config) return [];
          const nordpoolEntityId = config.attributes.nordpool_entity;
          const nordpool = hass.states[nordpoolEntityId];
          if (!nordpool || !nordpool.attributes.raw_today) return [];

          const prices = nordpool.attributes.raw_today;
          return prices.map((price) => {
            const time = new Date(price.start).getTime();
            const inSlot = slots.some(slot => {
              const start = new Date(slot.start).getTime();
              const end = new Date(slot.end).getTime();
              return time >= start && time < end;
            });
            return [time, inSlot ? price.value * 1000 : null];
          }).filter(point => point[1] !== null);
      # Charging slots overlay (green highlights)
      - entity: sensor.battery_energy_trading_charging_time_slots
        name: Charging Slots
        type: area
        color: 'rgba(76, 175, 80, 0.3)'
        stroke_width: 0
        offset: '-1d'
        data_generator: |
          const slots = entity.attributes.slots || [];
          const config = hass.states['sensor.battery_energy_trading_configuration'];
          if (!config) return [];
          const nordpoolEntityId = config.attributes.nordpool_entity;
          const nordpool = hass.states[nordpoolEntityId];
          if (!nordpool || !nordpool.attributes.raw_today) return [];

          const prices = nordpool.attributes.raw_today;
          return prices.map((price) => {
            const time = new Date(price.start).getTime();
            const inSlot = slots.some(slot => {
              const start = new Date(slot.start).getTime();
              const end = new Date(slot.end).getTime();
              return time >= start && time < end;
            });
            return [time, inSlot ? price.value * 1000 : null];
          }).filter(point => point[1] !== null);

  # Main Status Card
  - type: vertical-stack
    cards:
      - type: markdown
        content: |
          # ‚ö° Battery Energy Trading
          Smart battery management and solar energy optimization

      # Current Operation Status
      - type: entities
        title: "üîã Current Status"
        state_color: true
        entities:
          - entity: binary_sensor.battery_energy_trading_forced_discharge
            name: "Discharging Now"
            icon: mdi:battery-arrow-up
          - entity: binary_sensor.battery_energy_trading_cheapest_hours
            name: "Charging Now"
            icon: mdi:battery-arrow-down
          - entity: binary_sensor.battery_energy_trading_export_profitable
            name: "Export Profitable"
            icon: mdi:transmission-tower-export
          - entity: binary_sensor.battery_energy_trading_solar_available
            name: "Solar Active"
            icon: mdi:solar-power
          - entity: sensor.nordpool_kwh_ee_eur_3_10_022  # REPLACE WITH YOUR NORD POOL ENTITY
            name: "Current Price"
            icon: mdi:currency-eur

  # Daily Timeline View
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üìÖ Today's Energy Trading Schedule"

      - type: markdown
        content: |
          ### üî¥ Discharge Periods (Selling to Grid)
          {% if state_attr('sensor.battery_energy_trading_discharge_time_slots', 'slots') %}
          {% for slot in state_attr('sensor.battery_energy_trading_discharge_time_slots', 'slots') %}
          - **{{ as_timestamp(slot.start) | timestamp_custom('%H:%M', true) }} - {{ as_timestamp(slot.end) | timestamp_custom('%H:%M', true) }}** | {{ slot.energy_kwh | round(1) }} kWh @ ‚Ç¨{{ slot.price | round(3) }}/kWh (‚Ç¨{{ slot.revenue | round(2) }}){% if slot.battery_before is defined %} | üîã {{ slot.battery_before | round(1) }} ‚Üí {{ slot.battery_after | round(1) }} kWh{% endif %}
          {% endfor %}
          {% else %}
          *No discharge periods scheduled*
          {% endif %}

          ### üü¢ Charging Periods (Buying from Grid)
          {% if state_attr('sensor.battery_energy_trading_charging_time_slots', 'slots') %}
          {% for slot in state_attr('sensor.battery_energy_trading_charging_time_slots', 'slots') %}
          - **{{ as_timestamp(slot.start) | timestamp_custom('%H:%M', true) }} - {{ as_timestamp(slot.end) | timestamp_custom('%H:%M', true) }}** | {{ slot.energy_kwh | round(1) }} kWh @ ‚Ç¨{{ slot.price | round(3) }}/kWh (‚Ç¨{{ slot.cost | round(2) }})
          {% endfor %}
          {% else %}
          *No charging periods scheduled*
          {% endif %}

          ### üìä Daily Summary
          - **Total Discharge**: {{ state_attr('sensor.battery_energy_trading_discharge_time_slots', 'total_energy_kwh') | round(1) }} kWh ‚Üí ‚Ç¨{{ state_attr('sensor.battery_energy_trading_discharge_time_slots', 'estimated_revenue_eur') | round(2) }}
          - **Total Charge**: {{ state_attr('sensor.battery_energy_trading_charging_time_slots', 'total_energy_kwh') | round(1) }} kWh ‚Üí ‚Ç¨{{ state_attr('sensor.battery_energy_trading_charging_time_slots', 'estimated_cost_eur') | round(2) }}
          - **Net Trading**: ‚Ç¨{{ (state_attr('sensor.battery_energy_trading_discharge_time_slots', 'estimated_revenue_eur') | float(0) - state_attr('sensor.battery_energy_trading_charging_time_slots', 'estimated_cost_eur') | float(0)) | round(2) }}

  # Main Controls
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üéõÔ∏è Operation Modes"

      - type: entities
        title: "Enable/Disable Features"
        state_color: true
        entities:
          - entity: switch.battery_energy_trading_enable_forced_discharge
            name: "Enable Discharge at Peak Prices"
            icon: mdi:battery-arrow-up-outline
            secondary_info: attribute
            attribute: description
          - entity: switch.battery_energy_trading_enable_forced_charging
            name: "Enable Charging at Low Prices"
            icon: mdi:battery-arrow-down-outline
            secondary_info: attribute
            attribute: description
          - entity: switch.battery_energy_trading_enable_export_management
            name: "Enable Smart Export Control"
            icon: mdi:transmission-tower
            secondary_info: attribute
            attribute: description
          - entity: switch.battery_energy_trading_enable_multiday_optimization
            name: "Enable Multi-Day Optimization"
            icon: mdi:calendar-multiple
            secondary_info: attribute
            attribute: description

  # Discharge Schedule
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üì§ Discharge Schedule (Selling)"

      - type: entities
        entities:
          - entity: sensor.battery_energy_trading_discharge_time_slots
            name: "Discharge Slots"
            icon: mdi:battery-arrow-up
          - type: attribute
            entity: sensor.battery_energy_trading_discharge_time_slots
            attribute: slot_count
            name: "Total Slots"
            icon: mdi:counter
          - type: attribute
            entity: sensor.battery_energy_trading_discharge_time_slots
            attribute: total_energy_kwh
            name: "Total Energy"
            suffix: " kWh"
            icon: mdi:lightning-bolt
          - type: attribute
            entity: sensor.battery_energy_trading_discharge_time_slots
            attribute: estimated_revenue_eur
            name: "Est. Revenue"
            suffix: " EUR"
            icon: mdi:currency-eur
          - type: attribute
            entity: sensor.battery_energy_trading_discharge_time_slots
            attribute: average_price
            name: "Avg Price"
            suffix: " EUR/kWh"
            icon: mdi:chart-line

      # Individual discharge slot details
      - type: markdown
        content: |
          ### üî¥ Discharge Time Slots Detail
          {% if state_attr('sensor.battery_energy_trading_discharge_time_slots', 'slots') %}
          {% for slot in state_attr('sensor.battery_energy_trading_discharge_time_slots', 'slots') %}
          - **{{ as_timestamp(slot.start) | timestamp_custom('%H:%M', true) }} - {{ as_timestamp(slot.end) | timestamp_custom('%H:%M', true) }}**: {{ slot.energy_kwh | round(1) }} kWh @ ‚Ç¨{{ slot.price | round(3) }}/kWh ‚Üí Revenue: **‚Ç¨{{ slot.revenue | round(2) }}**{% if slot.battery_before is defined %} | üîã {{ slot.battery_before | round(1) }} ‚Üí {{ slot.battery_after | round(1) }} kWh{% endif %}
          {% endfor %}
          {% else %}
          *No discharge slots selected*
          {% endif %}

  # Charging Schedule
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üì• Charging Schedule (Buying)"

      - type: entities
        entities:
          - entity: sensor.battery_energy_trading_charging_time_slots
            name: "Charging Slots"
            icon: mdi:battery-arrow-down
          - type: attribute
            entity: sensor.battery_energy_trading_charging_time_slots
            attribute: slot_count
            name: "Total Slots"
            icon: mdi:counter
          - type: attribute
            entity: sensor.battery_energy_trading_charging_time_slots
            attribute: total_energy_kwh
            name: "Total Energy"
            suffix: " kWh"
            icon: mdi:lightning-bolt
          - type: attribute
            entity: sensor.battery_energy_trading_charging_time_slots
            attribute: estimated_cost_eur
            name: "Est. Cost"
            suffix: " EUR"
            icon: mdi:currency-eur
          - type: attribute
            entity: sensor.battery_energy_trading_charging_time_slots
            attribute: average_price
            name: "Avg Price"
            suffix: " EUR/kWh"
            icon: mdi:chart-line

      # Individual charging slot details
      - type: markdown
        content: |
          ### üü¢ Charging Time Slots Detail
          {% if state_attr('sensor.battery_energy_trading_charging_time_slots', 'slots') %}
          {% for slot in state_attr('sensor.battery_energy_trading_charging_time_slots', 'slots') %}
          - **{{ as_timestamp(slot.start) | timestamp_custom('%H:%M', true) }} - {{ as_timestamp(slot.end) | timestamp_custom('%H:%M', true) }}**: {{ slot.energy_kwh | round(1) }} kWh @ ‚Ç¨{{ slot.price | round(3) }}/kWh ‚Üí Cost: **‚Ç¨{{ slot.cost | round(2) }}**
          {% endfor %}
          {% else %}
          *No charging slots selected*
          {% endif %}

  # Arbitrage Opportunities
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üí∞ Arbitrage Opportunities"

      - type: entities
        title: "Best Trading Opportunity"
        entities:
          - entity: sensor.battery_energy_trading_arbitrage_opportunities
            name: "Trading Opportunities"
            icon: mdi:cash-multiple
          - type: attribute
            entity: sensor.battery_energy_trading_arbitrage_opportunities
            attribute: opportunities_count
            name: "Total Opportunities"
            icon: mdi:counter
          - type: attribute
            entity: sensor.battery_energy_trading_arbitrage_opportunities
            attribute: best_profit
            name: "Best Profit"
            suffix: " EUR"
            icon: mdi:currency-eur
          - type: attribute
            entity: sensor.battery_energy_trading_arbitrage_opportunities
            attribute: best_roi
            name: "Best ROI"
            suffix: " %"
            icon: mdi:chart-line-variant

      # Detailed arbitrage opportunities
      - type: markdown
        content: |
          ### üìä Top Arbitrage Opportunities
          {% if state_attr('sensor.battery_energy_trading_arbitrage_opportunities', 'all_opportunities') %}
          {% for opp in state_attr('sensor.battery_energy_trading_arbitrage_opportunities', 'all_opportunities') %}
          **Opportunity {{ loop.index }}:**
          - üîΩ **Charge**: {{ opp.charge_start }} - {{ opp.charge_end }} @ ‚Ç¨{{ opp.charge_price | round(3) }}/kWh
          - üîº **Discharge**: {{ opp.discharge_start }} - {{ opp.discharge_end }} @ ‚Ç¨{{ opp.discharge_price | round(3) }}/kWh
          - üíµ **Profit**: ‚Ç¨{{ opp.profit | round(2) }} | ROI: {{ opp.roi_percent | round(1) }}% | Energy: {{ opp.energy_kwh | round(1) }} kWh

          {% endfor %}
          {% else %}
          *No arbitrage opportunities found*
          {% endif %}

  # Price Thresholds
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üíµ Price Thresholds"

      - type: entities
        title: "Configure Price Limits"
        entities:
          - entity: number.battery_energy_trading_min_forced_sell_price
            name: "Min Sell Price"
            icon: mdi:currency-eur
          - entity: number.battery_energy_trading_min_export_price
            name: "Min Export Price"
            icon: mdi:currency-eur
          - entity: number.battery_energy_trading_max_force_charge_price
            name: "Max Buy Price"
            icon: mdi:currency-eur

  # Battery Settings
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üîã Battery Settings"

      - type: entities
        title: "Battery Protection"
        entities:
          - entity: number.battery_energy_trading_min_battery_level
            name: "Min Battery Level"
            icon: mdi:battery-low
          - entity: number.battery_energy_trading_discharge_rate_kw
            name: "Discharge Rate"
            icon: mdi:battery-arrow-up
          - entity: number.battery_energy_trading_charge_rate_kw
            name: "Charge Rate"
            icon: mdi:battery-arrow-down

  # Charging Settings
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## ‚öôÔ∏è Charging Settings"

      - type: entities
        title: "Charge Configuration"
        entities:
          - entity: number.battery_energy_trading_force_charge_target
            name: "Target Charge Level"
            icon: mdi:battery-charging
          - entity: number.battery_energy_trading_force_charging_hours
            name: "Charging Hours"
            icon: mdi:clock-outline

  # Solar Settings
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## ‚òÄÔ∏è Solar Settings"

      - type: entities
        title: "Solar Override"
        entities:
          - entity: number.battery_energy_trading_min_solar_threshold
            name: "Min Solar Power"
            icon: mdi:solar-power

  # Discharge Settings
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üìä Discharge Settings"

      - type: entities
        title: "Discharge Configuration"
        entities:
          - entity: number.battery_energy_trading_forced_discharge_hours
            name: "Discharge Hours (0=unlimited)"
            icon: mdi:clock-outline

  # Battery Monitoring
  - type: vertical-stack
    cards:
      - type: markdown
        content: "## üìà Battery Monitoring"

      - type: entities
        title: "Battery Indicators"
        state_color: true
        entities:
          - entity: binary_sensor.battery_energy_trading_battery_low
            name: "Battery Below 15%"
            icon: mdi:battery-alert
          - entity: binary_sensor.battery_energy_trading_low_price
            name: "Low Price Mode"
            icon: mdi:currency-eur-off
