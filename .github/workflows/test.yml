name: Test and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_test.txt

      - name: Run tests with coverage
        run: |
          pytest --cov=custom_components.battery_energy_trading \
                 --cov-report=xml \
                 --cov-report=term \
                 --cov-report=html \
                 tests/

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Upload coverage HTML artifact
        uses: actions/upload-artifact@v4
        if: matrix.python-version == '3.13'
        with:
          name: coverage-report
          path: htmlcov/

      - name: Check coverage threshold
        run: |
          coverage report --fail-under=90

      - name: Generate coverage badge
        if: matrix.python-version == '3.12' && github.event_name == 'push'
        run: |
          pip install genbadge[coverage]
          genbadge coverage -i coverage.xml -o coverage-badge.svg

      - name: Comment coverage on PR
        if: matrix.python-version == '3.12' && github.event_name == 'pull_request'
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 90
          MINIMUM_ORANGE: 70

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy bandit[toml]

      - name: Run ruff linter
        run: ruff check custom_components/battery_energy_trading/

      - name: Run ruff formatter check
        run: ruff format --check custom_components/battery_energy_trading/

      - name: Run mypy type checker
        run: mypy custom_components/battery_energy_trading/ --ignore-missing-imports || true

      - name: Run bandit security checker
        run: bandit -r custom_components/battery_energy_trading/ -c pyproject.toml || true

  hassfest:
    name: Validate with hassfest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Hassfest validation
        uses: home-assistant/actions/hassfest@master
